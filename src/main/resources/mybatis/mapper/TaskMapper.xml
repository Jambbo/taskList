<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.tasklist.repository.TaskRepository">
<!--Все запросы которые у нас будут проходить мы будем мепить с помощью этого resultMap к объекту Task либо к списку тасков-->
<!--В общем resultMap делает связь между колонками, которые мы назвали и пропертями самого объекта, в данном случае Таск, а в UserMapper User-->
    <resultMap id="TaskResultMap" type="com.example.tasklist.domain.task.Task" autoMapping="false">
        <id property="id" column="task_id"/>
        <result property="title" column="task_title"/>
        <result property="description" column="task_description"/>
        <result property="expirationDate" column="task_expiration_date"/>
        <result property="status" column="task_status"/>
    </resultMap>
<!--Опишем интерфейсы репозиториев, в айди тегов должны быть названия такими же как и названия методов в интерфейсах.-->
    <select id="findById" resultMap="TaskResultMap">
        SELECT t.id              as task_id,
        t.title           as task_title,
        t.description     as task_description,
        t.expiration_date as task_expiration_date,
        t.status          as task_status
        FROM tasks t
        WHERE t.id = #{id}
<!--  Вместо "?" тут ставится "#{id}", тут решетка позволяет нам получить доступ к входным параметрам методов(аргументам)-->
    </select>
    <select id="findAllByUserId" resultMap="TaskResultMap">
        SELECT t.id              as task_id,
        t.title           as task_title,
        t.description     as task_description,
        t.expiration_date as task_expiration_date,
        t.status          as task_status
        FROM tasks t
        JOIN users_tasks ut ON t.id=ut.task_id
        WHERE ut.user_id = #{userId}
    </select>
    
    <update id="update">
        UPDATE tasks
        SET title = #{title},
        description = #{description},
        expiration_date = #{expirationDate}
        status = #{status}
        WHERE id = #{id}
    </update>
    
    <insert id="assignToUserById">
        INSERT INTO users_tasks(task_id, user_id)
        VALUES(#{taskId},#{userId})
    </insert>
    
<!--Необходимо указать keyProperty - это ключ который в таблице должен быть и keyColumn - это ключ который есть в объекте(айдишник)-->
<!--И для того чтоб ставилось айди при создании записи и вставки в бд то следует использовать useGeneratedKeys="true", тоже самое было в методе create в репозитории(PreparedStatement.RETURN_GENERATED_KEYS)-->
    <insert id="create" keyProperty="id" keyColumn="id" useGeneratedKeys="true">
        INSERT INTO tasks (title, description, expiration_date,status)
        VALUES(#{title},#{description},#{expiration_date},#{status})
    </insert>

    <delete id="delete">
        DELETE FROM tasks
        WHERE id = #{id}
    </delete>

    
</mapper>